@model ConversorMoedas.Models.Transaction

@{
    ViewBag.Title = "Coin conversion";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OriginCoin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OriginCoin, (IEnumerable<SelectListItem>)ViewBag.ListOriginCoin, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OriginCoin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OriginValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginValue, new { htmlAttributes = new { @class = "form-control" , @type = "number" } })
                @Html.ValidationMessageFor(model => model.OriginValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DestinyCoin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DestinyCoin, (IEnumerable<SelectListItem>)ViewBag.ListCoin, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DestinyCoin, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Convert" class="btn btn-default" />
            </div>
        </div>

     
        </div>
}
 
 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
